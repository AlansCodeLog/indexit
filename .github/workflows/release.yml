name: Release

env:
  USE_LOCKFILE: false

on:
  push:
    branches: [ master, alpha, beta ]
  repository_dispatch:
    types: [ release ]
    # to trigger: curl -v -H "Accept: application/vnd.github.everest-preview+json" -H "Authorization: token $GH_TOKEN" https://api.github.com/repos/alanscodelog/indexit/dispatches -d '{ "event_type": "release" }'

jobs:
  release:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # awaiting https://github.com/actions/setup-node/issues/26 so we can just set this to [lts]
        # ideally we would trigger a release if the build succeeds on both node versions, need to research #future
        node-version: [10.x]

    steps:

    # region Setup
    - uses: actions/checkout@v2

    - name: Get Yarn Cache Path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-node-${{ matrix.node }}-yarn-

    - run: "echo Cache Key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}"
    - run: "echo Cache Restore-Keys: ${{ runner.os }}-node-${{ matrix.node }}-yarn-"
    - run: "echo Yarn Cache Hit: ${{ steps.yarn-cache.outputs.cache-hit }}"
    - name: Setting Up Node.js (${{ matrix.node-version }})
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    # endregion

    # region Steps
    - run: yarn install --frozen-lockfile
      if: "env.USE_LOCKFILE == 'true'"

    - run: yarn install --no-lockfile
      if: "env.USE_LOCKFILE == 'false'"

    - run: yarn build

    - run: yarn test

    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: npx semantic-release
    # endregion
